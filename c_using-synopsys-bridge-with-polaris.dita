<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_bqs_5rw_txb">
    <title>Using Synopsys Bridge CLI with Polaris</title>
    <body>
        <p>As a Polaris customer, you can use Synopsys Bridge to automate SAST and SCA scanning in
            your CI pipeline. </p>
        <p>You can use Synopsys Bridge to run Polaris scans in the following two ways:<ul
                id="ul_ut3_ljn_cyb">
                <li><xref href="#topic_bqs_5rw_txb/section_ypr_2tw_txb" format="dita">Running
                        Polaris scans with a JSON file</xref></li>
                <li><xref href="#topic_bqs_5rw_txb/section_nm3_czd_5xb" format="dita">Running
                        Polaris scans on the command line</xref></li>
            </ul></p>
        <p>In addition to running scans, you can also optionally configure Synopsys Bridge to create
            fix pull requests for SCA issues. Currently, only NPM is supported. For more
            information, see <xref href="c_complete-list-of-synopsys-bridge-commands.dita">Complete
                List of Synopsys Bridge Arguments</xref>.<note id="note_wx3_11t_gyb">As an
                alternative to Synopsys Bridge, you can also use <xref
                    href="c_using-synopsys-github-action.dita">Synopsys Github Action</xref>, <xref
                    href="c_using-synopsys-gitlab-template.dita">Synopsys Template for GitLab</xref>
                or <xref href="c_synopsys-security-scan-for-azure-devops.dita">Synopsys Security
                    Scan for Azure DevOps</xref>.</note></p>
        <section id="section_ypr_2tw_txb">
            <title>Running Polaris scans with a JSON file</title>
            <p>Synopsys Bridge for Polaris uses Coverity for SAST scans and Black Duck for SCA scans
                under the hood. Depending on the task, you may need to pass additional SAST and SCA
                configurations.</p>
            <p>Pass sensitive access token and password information using the
                    <codeph>BRIDGE_POLARIS_ACCESSTOKEN</codeph> environment variable, and run
                Synopsys Bridge and pass the JSON file using the <codeph>--input</codeph> command
                line option. </p>
            <p>Here is a command line example for
                Polaris:<codeblock id="codeblock_zzn_kt5_gyb">export BRIDGE_POLARIS_ACCESSTOKEN=&lt;POLARIS_ACCESSTOKEN>
synopsys-bridge --stage polaris --input input.json</codeblock></p>
            <p>The above example uses the following:<ul id="ul_qfp_zxm_gyb">
                    <li><codeph>BRIDGE_POLARIS_ACCESSTOKEN</codeph> environment variable to pass
                        sensitive information such as password or access token to Synopsys Bridge
                        (recommended for security purposes). Note that Synopsys Bridge automatically
                        picks up values passed thru these environment variables.</li>
                    <li><codeph>--stage </codeph>argument to specify the Synopsys security product
                        you are integrating with.</li>
                </ul></p>
            <p>Here is the <codeph>input.json</codeph> file:<codeblock>{
    "data": {
        "polaris": {
            "application": {
                "name": "<varname>&lt;APPLICATION_NAME></varname>"
            },
            "project": {
                "name": "<varname>&lt;PROJECT_NAME></varname>"
            },         
            "assessment": {
                "types":  ["SCA", "SAST"]
 
            },
            "serverUrl": "&lt;<varname>POLARIS_URL></varname>"
        }
    }
}</codeblock></p>
            <p>The above JSON file uses the following:<ul id="ul_ovg_gym_gyb">
                    <li><codeph>polaris.serverUrl</codeph> for Polaris URL.</li>
                    <li><codeph>polaris.application.name</codeph> for Polaris Application to use.
                        Note that the specified application must exist on Polaris with appropriate
                        entitlements.</li>
                    <li><codeph>polaris.project.name </codeph>for Polaris Project to use. Note that
                        the specified project must exist on Polaris. If you set
                            <codeph>polaris.onboarding</codeph> to <codeph>true</codeph>, Synopsys
                        Bridge will automatically create the project in case it doesn’t yet exist on
                        Polaris.</li>
                    <li><codeph>polaris.assessment.types </codeph>specifies the type of scan to be
                        run: <codeph>SAST</codeph> or <codeph>SCA</codeph> or
                            <codeph>SAST,SCA</codeph>.</li>
                </ul></p>
            <p>For the required minimum set of arguments that you need to pass to integrate Synopsys
                Bridge with Polaris, refer to the Polaris specific resources page under <xref
                    href="c_schema.dita"/>.</p>
            <p>For a complete list of environment variables and command line arguments, see <xref
                    href="c_complete-list-of-synopsys-bridge-commands.dita">Complete List of
                    Synopsys Bridge Arguments</xref>.</p>
            <p>For additional SAST-specific details, see <xref
                    href="#topic_bqs_5rw_txb/section_igg_jky_dyb"/>.</p>
        </section>
        <section id="section_nm3_czd_5xb">
            <title>Running Polaris scans on the command line</title>
            <p>Instead of using a JSON file, you can pass all arguments via the command line. </p>
            <p>Here is a command line example for Polaris:</p>
            <p>
                <codeblock>export BRIDGE_POLARIS_ACCESSTOKEN=<varname>&lt;POLARIS_ACCESSTOKEN></varname>
synopsys-bridge --stage polaris polaris.project.name="<varname>&lt;PROJECT_NAME></varname>" \
polaris.application.name="<varname>&lt;APPLICATION_NAME></varname>" \
polaris.assessment.types=SAST,SCA \
polaris.serverUrl="<varname>&lt;SERVERURL>"</varname></codeblock>
            </p>
            <p>The above example uses the following:<ul id="ul_s3v_r2n_gyb">
                    <li><codeph>BRIDGE_POLARIS_ACCESSTOKEN</codeph>  environment variable to pass
                        sensitive information such as password or access token to Synopsys Bridge
                        (recommended for security purposes). Note that Synopsys Bridge automatically
                        picks up values passed thru these environment variables.</li>
                    <li><codeph>--stage</codeph> argument to specify the Synopsys security product
                        in use.</li>
                    <li><codeph>polaris.serverUrl</codeph> for Polaris URL.</li>
                    <li><codeph>polaris.application.name </codeph>for Polaris Application to use.
                        Note that the specified application must exist on Polaris with appropriate
                        entitlements.</li>
                    <li><codeph>polaris.project.name</codeph> for Polaris Project to use. Note that
                        the specified project must exist on Polaris. If you set
                            <codeph>polaris.onboarding </codeph>to <codeph>true</codeph>, Synopsys
                        Bridge will automatically create the project in case it doesn’t yet exist on
                        Polaris..</li>
                    <li><codeph>polaris.assessment.types</codeph> specifies the type of scan to be
                        run: <codeph>SAST</codeph> or <codeph>SCA</codeph> or
                            <codeph>SAST,SCA</codeph>.</li>
                </ul></p>
            <p>For the required minimum set of arguments that you need to pass to integrate Synopsys
                Bridge with Polaris, refer to the Polaris specific resources page under <xref
                    href="c_schema.dita"/>.</p>
            <p>For a complete list of environment variables and command line arguments, see <xref
                    href="c_complete-list-of-synopsys-bridge-commands.dita">Complete List of
                    Synopsys Bridge Arguments</xref>.</p>
            <p>For additional SAST-specific details, see <xref
                    href="#topic_bqs_5rw_txb/section_igg_jky_dyb"/>.</p>
        </section>
        <section id="section_igg_jky_dyb">
            <title>Additional SAST configuration requirements</title>
            <p>A <codeph>coverity.yml</codeph> configuration file is required for <ul
                    id="ul_i3b_qky_dyb">
                    <li>Static analysis of compiled languages like C/C++, C# and Java. </li>
                    <li>Optimizing static analysis when results are unsatisfactory.</li>
                </ul>Certain Coverity Connect scans on Polaris require configuration of additional
                capture settings using a <codeph>coverity.yaml</codeph> file. See <xref
                    href="https://polaris.synopsys.com/developer/default/documentation/t_cov-thin-client"
                    format="html" scope="external">Configuring Coverity Thin Client for use with
                    Synopsys Bridge and Polaris</xref> in the <cite>Polaris Developer Portal</cite>
                for more information.</p>
        </section>
    </body>
</topic>
